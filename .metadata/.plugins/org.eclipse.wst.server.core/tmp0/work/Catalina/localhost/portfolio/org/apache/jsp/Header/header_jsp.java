/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-12 03:11:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Header;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"description\" content=\"HTML Study\">\r\n");
      out.write("<meta name=\"keywords\" content=\"HTML,CSS,XML,JavaScript\">\r\n");
      out.write("<meta name=\"author\" content=\"Bruce\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@import url('common.css');\r\n");
      out.write("body {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    position: relative;\r\n");
      out.write("}\r\n");
      out.write(".titleBox{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 0;\r\n");
      out.write("    padding-right: 10%;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write(".title {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding-top: 10px;\r\n");
      out.write("}\r\n");
      out.write(".title a{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logo{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding-bottom: 50px;\r\n");
      out.write("}\r\n");
      out.write(".logo h1{\r\n");
      out.write("    width: 10%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    border: 15px solid #F15F5F;\r\n");
      out.write("    border-radius: 50%;\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    font-size: 3em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".head1{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    background: #F15F5F;\r\n");
      out.write("}\r\n");
      out.write(".head1 nav{\r\n");
      out.write("    width: 90%; /* 메뉴들 ul 없애주는 역할*/\r\n");
      out.write("    margin: 0 auto;\t/*전체 메뉴바 자체의 위치*/\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-content: center;\r\n");
      out.write("    padding: 8px 0;\t/*메뉴바와 메뉴이름 사이 간격*/\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write(".bar{ \r\n");
      out.write("    width: 80%; /*메뉴들의 간격*/\r\n");
      out.write("    margin: 0 auto;  /*메뉴바와 메뉴이름 사이 간격*/\r\n");
      out.write("    display: flex; /*메뉴바 보이게하는 역할*/\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-content: center;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".bar li div {\r\n");
      out.write("    background:  #F15F5F;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    left: 30%;\r\n");
      out.write("    transform: translateX(-50%);/*소메뉴 위치(왼쪽이냐오른쪽이냐)*/\r\n");
      out.write("    opacity: 0;\t/*소메뉴 나오게하는 역할*/\r\n");
      out.write("    transition: .5s; /*소메뉴 나오거나 없어지는 속도*/\r\n");
      out.write("    padding: 10px 19.5%;/*큰메뉴와 소메뉴 사이 간격*/\r\n");
      out.write("    margin: 5px, 0;/*모름*/\r\n");
      out.write("    text-al\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bar li:hover div {\r\n");
      out.write("    opacity: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bar li div a {\r\n");
      out.write("\twidth: 50px;\r\n");
      out.write("    display: block;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 0;\t/*메뉴바 자체를 줄이기는 하지만 소메뉴들도 간격이 좁아짐*/\r\n");
      out.write("    text-transform: uppercase;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bar li div a:hover {\r\n");
      out.write("    color: #333;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    border-bottom: 1px solid  #F15F5F;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("<div class=\"titleBox\">\r\n");
      out.write("    <div class=\"title\">\r\n");
      out.write("\t\t<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userInfo eq null }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t<a href=\"../Member/login.jsp\">로그인</a>&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t\t\t<a href=\"../Member/memberRegister.jsp\">회원가입</a>\r\n");
      out.write("\t\t</c:if>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userInfo ne null }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userInfo.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" 님 환영합니다.<br/>\r\n");
      out.write("\t\t<a href=\"../logout.do\">로그아웃</a>&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t\t<a href=\"Member/memberModify.do\">회원정보 수정</a>&nbsp&nbsp&nbsp&nbsp\r\n");
      out.write("\t\t<a href=\"board/list.jsp\">고객센터</a>\r\n");
      out.write("\t</c:if>\r\n");
      out.write("</div>        \r\n");
      out.write("        <div class=\"logo\">\r\n");
      out.write("            <h1>\r\n");
      out.write("\t\t\t\t<a href=\"../main/main.jsp\">Meet<br>Meat</a>\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("<div class=\"head1\">\r\n");
      out.write("            <nav>\r\n");
      out.write("            <ul class=\"bar\">\r\n");
      out.write("\t\t\t\t<li class=\"bigMenu1\">\r\n");
      out.write("\t\t\t\t\t<a href=\"../Beef/beef.jsp\">Beef\r\n");
      out.write("\t\t\t\t\t\t<div class=\"smallMenu1\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"importProductBeef.jsp\">수입산</a> \r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"koreanBeef.jsp\">한우</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"bigMenu2\">\r\n");
      out.write("\t\t\t\t\t<a href=\"../Pork/pork.jsp\">Pork</a> \r\n");
      out.write("\t\t\t\t\t<div class=\"smallMenu2\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"importProductFrok.jsp\">수입산</a> \r\n");
      out.write("\t\t\t\t\t\t<a href=\"americanBeef.jsp\">한돈</a>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"bigMenu3\">\r\n");
      out.write("\t\t\t\t\t<a href=\"Lamb.jsp\">Lamb</a>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t<a href=\"../Event/event.jsp\">Event</a>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("</div>\r\n");
      out.write("</header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
